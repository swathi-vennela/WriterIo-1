{"ast":null,"code":"var _jsxFileName = \"/home/swathi_vennela/Documents/Dev/WriterIo-1/BlogApp/frontend/src/components/PostsList.js\";\nimport React, { Component, lazy, Suspense } from \"react\"; //import axios from \"axios\";\n\nconst Post = lazy(() => import(\"./Post\"));\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\n\nconst renderLoader = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"spinner-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"spinner-border\",\n  role: \"status\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"sr-only\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, \"Loading...\")));\n\nclass PostsList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      // Set the no of posts to be rendered to 5\n      noOfPosts: 5\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${baseURL}/server/posts/`).then(response => {\n      // The order of posts is reversed to display the posts in reverse chronological order\n      this.setState({\n        posts: response.data.reverse()\n      }); // Remove display of the spinner\n\n      document.querySelector(\".spinner-border\").style.display = \"none\";\n    }).catch(err => console.error(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Latest Posts\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"full-stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, \".\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Loading...\"))), this.state.posts.slice(0, this.state.noOfPosts).map(currentPost => /*#__PURE__*/React.createElement(Suspense, {\n      key: currentPost._id,\n      fallback: renderLoader(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }))), this.state.posts[this.state.noOfPosts] ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => // When the button is clicked change the state to reflect the change in the no of posts beoing rendered, which triggers a compnent\n      this.setState({\n        noOfPosts: this.state.noOfPosts + 3\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Load More Posts...\") : \"\");\n  }\n\n}\n\nexport default PostsList;","map":{"version":3,"sources":["/home/swathi_vennela/Documents/Dev/WriterIo-1/BlogApp/frontend/src/components/PostsList.js"],"names":["React","Component","lazy","Suspense","Post","baseURL","process","env","REACT_APP_BASEURL","renderLoader","PostsList","constructor","state","posts","noOfPosts","componentDidMount","axios","get","then","response","setState","data","reverse","document","querySelector","style","display","catch","err","console","error","render","slice","map","currentPost","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD,C,CACA;;AACA,MAAMC,IAAI,GAAGF,IAAI,CAAC,MAAM,OAAO,QAAP,CAAP,CAAjB;AAEA,MAAMG,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,IAAiC,uBAAjD;;AACA,MAAMC,YAAY,GAAG,mBACjB;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAgC,EAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,CADJ;;AAQA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAC9BU,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAET;AACAC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CACAC,GADL,CACU,GAAEZ,OAAQ,gBADpB,EAEKa,IAFL,CAEWC,QAAD,IAAc;AAChB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM,QAAQ,CAACE,IAAT,CAAcC,OAAd;AAAT,OAAd,EAFgB,CAIhB;;AACAC,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CC,KAA1C,CAAgDC,OAAhD,GACI,MADJ;AAEH,KATL,EAUKC,KAVL,CAUYC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAVpB;AAWH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACgB;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADhB,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CANJ,EAaK,KAAKnB,KAAL,CAAWC,KAAX,CACImB,KADJ,CACU,CADV,EACa,KAAKpB,KAAL,CAAWE,SADxB,EAEImB,GAFJ,CAESC,WAAD,iBACD,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,WAAW,CAACC,GADrB;AAEI,MAAA,QAAQ,EAAE1B,YAAY,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEyB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHP,CAbL,EAyBK,KAAKtB,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWE,SAA5B,iBACG;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,OAAO,EAAE,MACL;AACA,WAAKM,QAAL,CAAc;AACVN,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAAX,GAAuB;AADxB,OAAd,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,GAaG,EAtCR,CADJ;AA2CH;;AArE6B;;AAwElC,eAAeJ,SAAf","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\n//import axios from \"axios\";\nconst Post = lazy(() => import(\"./Post\"));\n\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\nconst renderLoader = () => (\n    <div className=\"spinner-container\">\n        <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n    </div>\n);\n\nclass PostsList extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            posts: [],\n            // Set the no of posts to be rendered to 5\n            noOfPosts: 5,\n        };\n    }\n\n    componentDidMount() {\n        axios\n            .get(`${baseURL}/server/posts/`)\n            .then((response) => {\n                // The order of posts is reversed to display the posts in reverse chronological order\n                this.setState({ posts: response.data.reverse() });\n\n                // Remove display of the spinner\n                document.querySelector(\".spinner-border\").style.display =\n                    \"none\";\n            })\n            .catch((err) => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className=\"posts-list\">\n                <h1 id=\"title\">\n                    Latest Posts<span className=\"full-stop\">.</span>\n                </h1>\n\n                {/* A spinner to indicate loading until posts are stored in state */}\n                <div className=\"spinner-container\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n\n                {/* Display the posts in reverse chronological order */}\n                {this.state.posts\n                    .slice(0, this.state.noOfPosts)\n                    .map((currentPost) => (\n                        <Suspense\n                            key={currentPost._id}\n                            fallback={renderLoader()}\n                        >\n                            <Post post={currentPost} />\n                        </Suspense>\n                    ))}\n\n                {/* To load more posts */}\n                {this.state.posts[this.state.noOfPosts] ? (\n                    <button\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                            // When the button is clicked change the state to reflect the change in the no of posts beoing rendered, which triggers a compnent\n                            this.setState({\n                                noOfPosts: this.state.noOfPosts + 3,\n                            })\n                        }\n                    >\n                        Load More Posts...\n                    </button>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n}\n\nexport default PostsList;\n"]},"metadata":{},"sourceType":"module"}